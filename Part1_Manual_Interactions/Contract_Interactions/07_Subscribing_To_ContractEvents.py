# 2023 Console Cowboys Python Smart Contract Hacking Course
# @author Olie Brown @ficti0n
# http://cclabs.io

from web3 import Web3
import asyncio, json

#Make Connection To local Ganache Blockchain
GANACHE = 'http://127.0.0.1:7545'
web3 = Web3(Web3.HTTPProvider(GANACHE))

#Setup Contract Communications
target_address = 'ADD CONTRACT ADDRESS'
target_abi = '''ADD CONTRACT ABI'''
target = web3.eth.contract(address=target_address, abi=target_abi)

#Parse and Print out Deposit Events
def EventHandler(event): 
    event = Web3.toJSON(event)
    event = json.loads(event)
    print(event["args"]["sender"], event["args"]["value"], event["args"]["message"])
  
#Keep Polling for Events and send to Handler for printing
async def EventLogLoop(event_filter, poll_interval):
    while True:
        for event in event_filter.get_new_entries():
            EventHandler(event)
        await asyncio.sleep(poll_interval)

#Setup Event Loops with Async
def main():
    event_filter = target.events.DepositLog.createFilter(fromBlock='latest')
    loop = asyncio.new_event_loop()
    asyncio.set_event_loop(loop)
    try:
        loop.run_until_complete(EventLogLoop(event_filter, 2))

    finally:
        loop.close()

if __name__ == "__main__": 
    main()
